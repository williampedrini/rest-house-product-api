import java.nio.file.Files
import java.nio.file.Path
apply plugin: 'docker-compose'

Files.createDirectories(Path.of(project.property('environment.development.mongodbDatabaseVolume')))

dockerCompose {
    useComposeFiles = ['environment/development/docker-compose.yml']
    removeVolumes = false
    isRequiredBy(project.tasks.bootRun)
}

bootRun {
    environment 'GOOGLE_CLOUD_PROJECT', project.property('environment.development.gcp.project-id')
    environment 'GOOGLE_CLOUD_PROJECT_TOPIC', project.property('environment.development.gcp.topic-id')
    environment 'GOOGLE_APPLICATION_CREDENTIALS', project.property('environment.development.gcp.credentials.location')

    environment 'PRODUCT_MONGODB_DATABASE', project.property('environment.development.mongodbAuthenticationDatabase')
    environment 'PRODUCT_MONGODB_AUTHENTICATION_DATABASE', project.property('environment.development.mongodbDatabase')
    environment 'PRODUCT_MONGODB_DATABASE_URI', project.property('environment.development.mongodbDatabaseUri')

    environment 'PRODUCT_AUTH_CHECK_TOKEN_URL', project.property('environment.development.oauthCheckTokenUrl')
    environment 'PRODUCT_AUTH_CLIENT_ID', project.property('environment.development.oauthClientId')
    environment 'PRODUCT_AUTH_CLIENT_SECRET', project.property('environment.development.oauthClientSecret')
}